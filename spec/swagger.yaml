swagger: '2.0'
info:
  version: '0.0.1'
  title: Capira-API 
  description: RESTful JSON Capira-API
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: Capira API team
    email: hello@capira.com
    url: http://capira.io
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: capira.de
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /channels:
    get:
      description: Returns all channels from the system that the user has access to
      operationId: findChannels
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: channel response
          schema:
            type: array
            items:
              $ref: '#/definitions/channel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new channel in the store.  Duplicates are allowed
      operationId: addChannel
      produces:
        - application/json
      parameters:
        - name: channel
          in: body
          description: Channel to add to the store
          required: true
          schema:
            $ref: '#/definitions/newChannel'
      responses:
        '200':
          description: channel response
          schema:
            $ref: '#/definitions/channel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /channels/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the channel
      operationId: findChannelById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of channel to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: channel response
          schema:
            $ref: '#/definitions/channel'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single channel based on the ID supplied
      operationId: deleteChannel
      parameters:
        - name: id
          in: path
          description: ID of channel to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: channel deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  channel:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  newChannel:
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
  errorModel:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
